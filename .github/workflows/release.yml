name: release

on:
  workflow_dispatch:
    inputs:
      snapshot-build:
        description: 'Snapshot build?'
        type: boolean
        required: true
        default: false
      release-tag:
        description: 'Release Tag (only if not snapshot)'
        required: false
        default: 'services_XXX_apps_XXX'

jobs:
  release-version:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Prepare mvnw
        run: chmod +x ./mvnw

      - name: Remove snapshot from services
        if: github.event.inputs.snapshot-build == 'false'
        run: ./mvnw versions:set --batch-mode -DremoveSnapshot -DprocessAllModules
      - name: Set services release version env variable
        run: echo "SERVICES_RELEASE_VERSION=$(./mvnw help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_ENV
    outputs:
      services-release-version: ${{ env.SERVICES_RELEASE_VERSION }}

  release-services:
    needs: release-version
    uses: ./.github/workflows/workflow-release-services.yaml
    with:
      snapshot-release: ${{ github.event.inputs.snapshot-build == 'true' }}
      release-version: ${{ needs.release-version.outputs.services-release-version }}
    secrets: inherit

  github-release:
    if: github.event.inputs.snapshot-build == 'false' && always() && !contains(needs.*.result, 'failure')
    needs: [release-services]
    uses: ./.github/workflows/workflow-github-release.yaml
    with:
      release-tag: ${{ github.event.inputs.release-tag }}
    secrets: inherit

  bump-versions:
    if: github.event.inputs.snapshot-build == 'false' && always() && !contains(needs.*.result, 'failure')
    needs: github-release
    uses: ./.github/workflows/workflow-bump-version.yaml
    with:
      services-new-version: ${{ github.event.inputs.services-new-version }}
      bump-services-version: ${{ github.event.inputs.services == 'true' }}
    secrets: inherit
